services:
  backend:
    build:
      context: ./backend
    container_name: backend
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - FT_OAUTH_CLIENT_ID=${FT_OAUTH_CLIENT_ID}
      - FT_OAUTH_CLIENT_SECRET=${FT_OAUTH_CLIENT_SECRET}
      - DEBUG=${DEBUG}
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_PORT}

  db:
    image: postgres
    container_name: db
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./postgres_db:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  frontend:
    build:
      context: ./frontend
    command: npm start
    container_name: frontend
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
    stdin_open: true
    tty: true
    depends_on:
      - backend

volumes:
  postgres_db: