name: Django CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:17
        env:
            POSTGRES_DB: ${{ secrets.DB_NAME }}
            POSTGRES_USER: ${{ secrets.DB_USER }}
            POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U ${{ secrets.DB_USER }}" 
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Debug secrets
        run: |
          echo "DB_USER is ${{ secrets.DB_USER }}"
          echo "DB_PASSWORD is ${{ secrets.DB_PASSWORD }}"


      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Compose
        run: sudo apt-get install docker-compose

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'
      
      - name: Install dependencies
        run: |
          pip install -r backend/requirements.txt
      
      - name: Run Django migrations
        run: |
          docker-compose run backend python manage.py migrate

      - name: Run Django tests
        run: |
          docker-compose run backend python manage.py test
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          FT_OAUTH_CLIENT_ID: ${{ secrets.FT_OAUTH_CLIENT_ID }}
          FT_OAUTH_CLIENT_SECRET: ${{ secrets.FT_OAUTH_CLIENT_SECRET }}
          EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
          EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
          DEBUG: ${{ secrets.DEBUG }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_PORT: ${{ secrets.DB_PORT }}

      - name: Build and run frontend
        run: |
          docker-compose run frontend npm install
          docker-compose run frontend npm test